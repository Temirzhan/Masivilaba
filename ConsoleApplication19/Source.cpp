#include<stdio.h>
#include<iostream>
#include<locale.h>
#include<math.h>
#include<time.h>

using namespace std;
char f;
void main()
{
	setlocale(LC_ALL, "rus");
	srand(time(NULL));
	do
	{
		int N;
		cout << "Выберите задание" << endl;
		cin >> N;
		if (N == 1)
		{
			//Написать, программу, которая вычисляет прибыль фирмы за 6 месяцев. Пользователь вводит прибыль фирмы за каждый месяц.
			int A[6];
			for (int i = 0; i < 6; i++)
			{
				cout << "Введите прибыль за " << i + 1 << "месяц" << endl;
				cin >> A[i];
			}
			int sum = 0;
			for (int i = 0; i < 6; i++)
			{
				sum += A[i];
			}
			cout << "Прибыль за 6 месяцев = " << sum << endl;
		}
		else if (N == 2)
		{
			//2.	*Написать программу, которая выводит одномерный массив в обратном порядке
			int A[10]; int temp;
			for (int i = 0; i < 10; i++)
			{
				A[i] = 1 + rand() % 100;
			}
			int V = 10;
			for (int i = 9; i >= 0; i--)
			{
				cout << "A[" << i << "]= " << A[i] << endl;
			}
		}
		else if (N == 3)
		{
			//Пользователь вводит длину сторон пятиугольника, каждая сторона заноситься в массив, необходимо вычислить периметр пятиугольника (периметр – сумма всех сторон).
			int A[5];
			for (int i = 0; i < 5; i++)
			{
				cout << "Введите сторону " << i + 1 << endl;
				cin >> A[i];
			}
			int sum = 0;
			for (int i = 0; i < 5; i++)
			{
				sum += A[i];
			}
			cout << "перимитр =" << sum << endl;
		}
		else if (N == 4)
		{
			/*Пользователь вводит прибыль фирмы за год (12 месяцев). Необходимо определить месяц, в котором прибыль была максимальна и месяц, в котором прибыль была минимальна.*/
			int A[12];
			int max = -5000;
			int min = 100000;
			int indemax;
			int indemin;
			for (int i = 0; i < 12; i++)
			{
				cout << "Введите прибыль за  " << i + 1 << "месяц" << endl;
				cin >> A[i];
				if (max < A[i])
				{
					max = A[i];
					indemax = i;
				}
				if (min > A[i])
				{
					min = A[i];
					indemin = i;
				}
			}
			cout << "Максимальная прибыль в " << indemax + 1 << " месяце" << endl;
			cout << "Минимальная прибыль в " << indemin + 1 << " месяце" << endl;
		}
		else if (N == 5)
		{
			/*В одномерном массиве, заполненном случайными числами, определить минимальный и максимальный элементы*/
			int A[12];
			int max = -5000;
			int min = 100000;
			int indemax;
			int indemin;
			for (int i = 0; i < 12; i++)
			{
				A[i] = 1 + rand() % 100;
				if (max < A[i])
				{
					max = A[i];
					indemax = i;
				}
				if (min > A[i])
				{
					min = A[i];
					indemin = i;
				}
				cout << "A[" << i << "]= " << A[i] << endl;
			}

			cout << "Минемальный элемент A[" << indemin << "] = " << A[indemin] << endl;
			cout << "Максимальный элемент A[" << indemax << "] = " << A[indemax] << endl;
		}
		else if (N == 6)
		{
			/*Пользователь вводит прибыль фирмы за год (12 месяцев). Затем  пользователь вводит диапазон (например, 3 и 6 – поиск между 3-м и 6-м месяцем).
			Необходимо определить месяц, в котором прибыль была максимальна и месяц, в котором прибыль была минимальна с учетом выбранного диапазона.*/
			int A[12];
			int max = -5000;
			int min = 100000;
			int indemax;
			int indemin;
			for (int i = 0; i < 12; i++)
			{
				cout << "Введите прибыль за  " << i + 1 << "месяц" << endl;
				cin >> A[i];
			}
			int q, z;
			cout << "введите месяц от которого будет минимальная и максемальная прибыль " << endl;
			cin >> q;
			cout << "введите месяц до которого будет минимальная и максемальная прибыль включительно " << endl;
			cin >> z;
			for (q -= 1; q < z - 1; q++)
			{
				if (max < A[q])
				{
					max = A[q];
					indemax = q;
				}
				if (min > A[q])
				{
					min = A[q];
					indemin = q;
				}
			}

			cout << "Максимальная прибыль в " << indemax + 1 << " месяце" << endl;
			cout << "Минимальная прибыль в " << indemin + 1 << " месяце" << endl;
		}
		else if (N == 7)
		{
			/*В одномерном массиве, состоящем из N вещественных чисел вычислить:
			•	Сумму отрицательных элементов.
			•	Произведение элементов, находящихся между min и max элементами.
			•	Произведение элементов с четными номерами.
			•	Сумму  элементов, находящихся между первым и последним отрицательными элементами.
			*/
			int A[10]; int sum = 0;
			int sumc = 1; int f = 0; int cht;
			int chtr;
			int max = -5000;
			int min = 100000;
			int indemax;
			int indemin;
			int dl = 1;
			for (int i = 0; i < 10; i++)
			{
				A[i] = -10 + rand() % 30;

				cout << "A[" << i << "]= " << A[i] << endl;
				if (A[i] < 0)
				{
					sum += A[i];
					cht = i;
				}
				if ((i % 2) == 0)
				{
					sumc *= A[i];
				}
				if ((A[i]<0) && (f == 0))
				{
					f = 1;
					chtr = i;
				}
				if (max < A[i])
				{
					max = A[i];
					indemax = i;
				}
				if (min > A[i])
				{
					min = A[i];
					indemin = i;
				}
			}
			cout << "Сумма отрицательных элементов = " << sum << endl;
			if (indemax > indemin)
			{
				for (indemin += 1; indemin < indemax; indemin++)
				{
					dl *= A[indemin];
				}
			}
			else
			{
				for (indemax += 1; indemax < indemin; indemax++)
				{
					dl *= A[indemax];
				}
			}
			cout << "произведение элементов с четными номерами= " << sumc << endl;
			cout << "произведение элементов между макс и мин= " << dl << endl;
			sum = 0;
			for (chtr += 1; chtr < cht; chtr++)
			{
				sum += A[chtr];
			}
			cout << "Суммa  элементов, находящихся между первым и последним отрицательными элементами = " << sum << endl;
			cout << "--------------" << endl;

		}
		else if (N == 8)
		{
			/*Сжать(сдвинуть элементы) массив, удалив из него все 0, и заполнить освободившиеся справа элементы значениями -1;*/
			int A[10]; int volue;
			int index; int temp;
			int l = 10;
			for (int i = 0; i < 10; i++)
			{
				A[i] = 0 + rand() % 7;
				cout << "A[" << i << "]= " << A[i] << endl;
			}
			for (int i = 0; i < 10; i++)
			{
				if (A[i] == 0)
				{
					for (int j = i + 1; j <l; j++)
					{
						A[j-1] = A[j];

					}
					A[l - 1] = -1;
					l--;
				}
			}
			for (int i = 0; i < 10; i++)
			{
				cout << "A[" << i << "]= " << A[i] << endl;
			}

		}
		else if (N == 9)
		{
			/*Написать программу, выполняющую сортировку одномерного массива целых чисел методом пузырька.*/
			int A[10];
			int temp;
			for (int i = 0; i < 10; i++)
			{
				A[i] = 0 + rand() % 7;
				cout << "A[" << i << "]= " << A[i] << "\t";
			}
			cout << endl;
			for(int i=0;i<9;i++)
				for (int j = 9; j > i; j--)
				{
					if (A[j - 1] > A[j])
					{
						temp = A[j - 1];
						A[j - 1] = A[j];
						A[j] = temp;
					}
				}
			
			for (int i = 0; i < 10; i++)
			{
				cout << "A[" << i << "]= " << A[i]<<"\t";
			}
			cout << endl;
		}
		else if (N == 10)
		{
			/*Написать программу, выполняющую сортировку одномерного массива целых чисел методом вставок*/
			int A[10]; int value;
			int index;
			for (int i = 0; i < 10; i++)
			{
				A[i] = 0 + rand() % 7;
				cout << "A[" << i << "]= " << A[i] << "\t";
			}
			cout << endl;
			for (int i = 1; i < 10; i++)
			{
				value = A[i];
				index = i;
				while ((index > 0) && (A[index - 1] > value))
				{
					A[index] = A[index - 1];
					index--;
				}
				A[index] = value;
			}
	
			for (int i = 0; i < 10; i++)
			{
				cout << "A[" << i << "]= " << A[i] << "\t";
			}
			cout << endl;
		}
		else if (N == 11)
		{
			/*Написать программу, выполняющую сортировку одномерного массива целых чисел методом быстрого поиска.*/
			int A[10];
			int temp;
			for (int i = 0; i < 10; i++)
			{
				A[i] = 0 + rand() % 7;
				cout << "A[" << i << "]= " << A[i] << "\t";
			}
			cout << endl;
			for (int i = 0; i<9; i++)
				for (int j = 9; j > i; j--)
				{
					if (A[j - 1] > A[j])
					{
						temp = A[j - 1];
						A[j - 1] = A[j];
						A[j] = temp;
					}
				}

			for (int i = 0; i < 10; i++)
			{
				cout << "A[" << i << "]= " << A[i] << "\t";
			}
			cout << endl;
		}
		else if (N == 12)
		{
			/*Написать программу «справочник». Создать два одномерных массива. Один массив хранит номера ICQ, второй – телефонные номера. Реализовать меню для пользователя: 
a)	отсортировать по номерам ICQ
b)	отсортировать по номерам телефона
c)	вывести список пользователей
d)	выход
*/
			long int A[10], B[10]; int temp;
			for (int i = 0; i < 10; i++)
			{
				A[i] = 1000000 + rand() % 9999999;
				cout <<"8705"<< A[i] << endl;
			}
			cout << "------------" << endl;
			for (int i = 0; i < 10; i++)
			{
				B[i] = 100000000 + rand() % 999999999;
				cout << B[i] << endl;
			}
			cout << "------------" << endl;
			cout << "выберите сортировку "<<endl;
			cout << "1)по номеру телефона" << endl;
			cout << "2)по ICQ" << endl;
			int s;
			cin >> s;
			switch (s)
			{
			case 1:
			{
				for (int i = 0; i<9; i++)
					for (int j = 9; j > i; j--)
					{
						if (A[j - 1] > A[j])
						{
							temp = A[j - 1];
							A[j - 1] = A[j];
							A[j] = temp;
						}
					}
				for (int i = 0; i < 10; i++)
				{
					cout << "8705" << A[i] << endl;
				}
			}
				break;
			case 2:
			{
				for (int i = 0; i<9; i++)
					for (int j = 9; j > i; j--)
					{
						if (B[j - 1] > B[j])
						{
							temp = B[j - 1];
							B[j - 1] = B[j];
							B[j] = temp;
						}
					}
				for (int i = 0; i < 10; i++)
				{
					cout << B[i] << endl;
				}
			}
			break;
			}
		}
		else if (N == 13)
		{
			/*Написать программу «успеваемость». Пользователь вводит 10 оценок студента. Реализовать меню для пользователя
a)	вывод оценок (вывод содержимого массива)
b)	пересдача экзамена (пользователь вводит номер элемента массива и новую оценку)
c)	выходит ли стипендия (стипендия выходит, если средний бал не ниже 10.7) 
*/
			int A[10];
			for (int i = 0; i < 10; i++)
			{
				cout << " Введите оценку за " << i + 1 << "предмет : " << endl;
				cin >> A[i];
			}
			nazad:
			cout << "выберит одно из действий" << endl;
			cout<<"a)	вывод оценок (вывод содержимого массива)"<< endl;
		    cout <<"b)	пересдача экзамена(пользователь вводит номер элемента массива и новую оценку"<< endl;
			cout <<"c)	выходит ли стипендия(стипендия выходит, если средний бал не ниже 10.7) " << endl;
			char ch;
			cin >> ch;
			if (ch == 'a')
			{
				for (int i = 0; i < 10; i++)
				{
					cout << "оценка за " << i + 1 << "предмет = " << A[i] << endl;
				}
			}
			else if (ch == 'b')
			{
				cout << "введите номер оценки" << endl;
				int nomer;
				cin >> nomer;
				cout << "введите оценку" << endl;
				int ocenka;
				cin >> ocenka;
				A[nomer - 1] = ocenka;
			}
			else if (ch == 'c')
			{
				int sum=0;
				for (int i = 0; i < 10; i++)
				{
					sum += A[i];
				}
				if ((sum / 10) > 10.7)
				{
					cout << "есть стипендия" << endl;
				}
				else
				{
					cout << "нет стипендии" << endl;
				}

			}
			cout << "хотите перейти назад к выбору" << endl;
			cout << "y=da n-net" << endl;
			cin>>ch;
			if (ch == 'y')
			{
				goto nazad;
			}
			
		}
		else if (N == 14)
		{
			/*Написать программу, копирующую элементы 2-х массивов размером 5 элементов каждый в один массив размером 10 элементов  следующим образом: сначала копируются последовательно все элементы, большие 0, затем последовательно все элементы, равные 0, а затем последовательно все элементы, меньшие 0.*/
			int A[5], B[5], C[10];
			int x = 0; int temp;
			for (int i = 0; i < 5; i++)
			{
				A[i] = -10 + rand() % 30;
				cout << "A["<<i<<"]=" << A[i] << "\t";
			}
			cout << endl;
			for (int i = 0; i < 5; i++)
			{
				B[i] = -10 + rand() % 30;
				cout << "B[" << i << "]=" << B[i] << "\t";
			}
			cout << endl;
			for (int i = 0,j=5; i < 5,j<10; i++,j++)
			{
				C[i] = A[i];
				C[j] = B[i];
		}
			for (int i = 0; i<9; i++)
				for (int j = 9; j > i; j--)
				{
					if (C[j - 1] < C[j])
					{
						temp = C[j - 1];
						C[j - 1] = C[j];
						C[j] = temp;
					}
				}
			for (int i = 0; i < 10; i++)
			{
				cout << "C[" << i << "]=" << C[i] << "\t";
			}
			cout << endl;
		}
		else if (N == 15)
		{
			/*Написать программу, которая заполняет одномерный массив из 10 элементов вещественными числами в диапазоне от 1 до 10 с двумя знаками после запятой.
а)**количество знаков после запятой вводит пользователь
*/
			cout.precision(2);
			float A[10];
			for (int i = 0; i < 10; i++)
			{
				A[i] = (1. + rand() % 10)/(1. + rand() % 10);
				cout << "A[" << i << "]=" << A[i] << "\t";
			}
			cout << endl;
		}
		else if (N == 16)
		{
			/*Написать программу, копирующую последовательно элементы одного массива размером 10 элементов в 2 массива размером 5 элементов каждый.
*/
			int A[5], B[5], C[10];
			int x = 0; int temp;
			for (int i = 0; i < 10; i++)
			{
				C[i] = -10 + rand() % 30;
				cout << "C[" << i << "]=" << C[i] << "\t";
			}
			cout << endl;
			cout << endl;
			for (int i = 0, j = 5; i < 5, j<10; i++, j++)
			{
				A[i] = C[i];
				B[i] = C[j];
			}
			for (int i = 0; i < 5; i++)
			{
				cout << "A[" << i << "]=" << A[i] << "\t";
			}
			cout << endl;
			for (int i = 0; i < 5; i++)
			{
				cout << "B[" << i << "]=" << B[i] << "\t";
			}
			cout << endl;
		}
		else if (N == 17)
		{
			/*Написать программу, копирующую последовательно элементы 2-х массивов размером 5 элементов каждый в один массив размером 10 элементов.*/
			int A[5], B[5], C[10];
			int x = 0; int temp;
			for (int i = 0; i < 5; i++)
			{
				A[i] = -10 + rand() % 30;
				cout << "A[" << i << "]=" << A[i] << "\t";
			}
			cout << endl;
			for (int i = 0; i < 5; i++)
			{
				B[i] = -10 + rand() % 30;
				cout << "B[" << i << "]=" << B[i] << "\t";
			}
			cout << endl;
			for (int i = 0, j = 5; i < 5, j<10; i++, j++)
			{
				C[i] = A[i];
				C[j] = B[i];
			}
			for (int i = 0; i<9; i++)
				for (int j = 9; j > i; j--)
				{
					if (C[j - 1] > C[j])
					{
						temp = C[j - 1];
						C[j - 1] = C[j];
						C[j] = temp;
					}
				}
			for (int i = 0; i < 10; i++)
			{
				cout << "C[" << i << "]=" << C[i] << "\t";
			}
			cout << endl;
		
		}
		else if (N == 18)
		{
			/*Написать программу, которая осуществляет разбиение введенного числа на цифры и заносит эти цифры в массив. Вывести элементы массива, разделяя их двумя пробелами.*/
			int A[100]; int B; int c; int i = 0;
			cout << "Введите число" << endl;
			cin >> B;
			while (B>0)
			{
				c = B % 10;
				B /= 10;
				A[i] = c;
				i++;
			}
			for (int j = 0; j < i; j++)
			{
				cout << "A[" << j << "]=" << A[j] << endl;
			}
		}
		else if (N == 19)
		{
			/*Напишите программу, которая выполняет поэлементную сумму двух массивов и результат заносит в третий  массив.*/
			int A[10], B[10], C[10];
			for (int i = 0; i < 10; i++)
			{
				A[i] = 1 + rand() % 30;
				cout << "A[" << i << "]=" << A[i] << "\t";
			}
			cout << endl;
			for (int i = 0; i < 10; i++)
			{
				B[i] = 1 + rand() % 30;
				cout << "B[" << i << "]=" << B[i] << "\t";
			}
			cout << endl;
			for (int i = 0; i < 10; i++)
			{
				C[i] = A[i] + B[i];
				cout << "C[" << i << "]=" << B[i] << "\t";
			}	
			cout << endl;

		}
		else if (N == 20)
		{
			/*Напишите программу, которая спрашивает у пользователя IP адрес (4 цифры, каждая из которых от 0 до 255) и заносит их в массив. Выполнить проверку корректности введенных цифр.
			Результат вывести в виде цифр, разделенных точкой (160.1.8.1).*/
			int A[4]; int f=0;
			cout << "Введите свой ip" << endl;
			for (int i = 0; i < 4; i++)
			{
				cin >> A[i];
			}
			for (int i = 0; i < 4; i++)
			{
				cout << A[i] ;
				if (i < 3)
				{
					cout << ".";
				}
			}
			cout << endl;
			for (int i = 0; i < 4; i++)
			{
				if ((A[i] < 0) && (A[i] > 255))
				{
					f = 1;
				}
			}
			if (f == 0)
				cout << "вы ввели верный айпи" << endl;
			else
			{
				cout << "вы ввели не верный айпи" << endl;
			}
		}
		else if (N == 21)
		{
			/*Напишите программу, которая суммирует элементы массива из 10 элементов по следующему принципу: первый суммирует с последним; второй – с предпоследним и т.д. И заносит сумму в массив из 5 элементов.*/
			int A[10], B[5];
			for (int i = 0; i < 10; i++)
			{
				A[i] = 1 + rand() % 30;
				cout << "A[" << i << "]=" << A[i] << "\t";
			}
			cout << endl;
			for(int i = 0; i < 5; i++)
			{
				B[i] = A[i] + A[9 - i];
				cout << "B[" << i << "]=" << B[i] << "\t";
			}
			cout << endl;
		}
		else if (N == 22)
		{
			/*Написать программу, которая спрашивает у пользователя 10 оценок по 5-бальной системе и определяет количество 2-ек, 3-ек, 4-ок и 5-ок. 
а)** Оценки вводятся по 12-бальной системе. Двойкой считается оценка ниже 4, тройкой – от 4 до 6 и т.д.
*/
			int A[10]; int B[4] = {0};
			
			cout << "Введите оценки" << endl;
			for (int i = 0; i < 10; i++)
			{
				cout << i + 1 << " оценка " << endl;
				cin >> A[i];
				if (A[i] < 4)
				{
					B[0]++;
				}
				if ((A[i] > 3) && (A[i] < 6))
				{
					B[1]++;
				}
				if ((A[i] > 5) && (A[i] < 9))
				{
					B[2]++;
				}
				if ((A[i] > 8) && (A[i] < 11))
				{
					B[3]++;
				}
			}
			for (int i = 0; i < 4; i++)
			{
				cout << "колличетсво " << i + 2 << "= "<<B[i] << endl;
			}
			
		}
		else if (N == 23)
		{
			/*Написать программу, которая переворачивает массив (первый элемент становиться последним, второй предпоследним и т.д.)

*/
			const int h = 10;
			int A[h];
			int temp;
			for (int i = 0; i < h; i++)
			{
				A[i] = 1 + rand() % 30;
				cout << "A[" << i << "]=" << A[i] << "\t";
			}
			cout << endl;
			int p = h;
			for (int i = 0; i < (h / 2); i++)
			{
				temp = A[i];
				A[i] = A[p - 1];
				A[p - 1] = temp;
				p--;
			}
			for (int i = 0; i < h; i++)
			{
				cout << "A[" << i << "]=" << A[i] << "\t";
			}
			cout << endl;
		}
		else if (N == 24)
		{
			/*Написать программу «синтезатор». Создать два массива, один хранит частоты нот, второй – длительность звучания. Реализовать для пользователя меню
a)	ввод мелодии
b)	редактирование мелодии (по номеру ноты)
         а) при редактировании мелодии пользователь вводит номер ноты и задает новую частоту и длительность
         б) *** при редактировании мелодии пользователь видит новое меню, содержащее список  доступных нот и доступных  длительностей
c)	просмотреть ноты мелодии
d)	проиграть мелодию
e)	выход
          Примечание: функция  Beep выдает сигнал на динамике с указанной длительностью и частотой. Библиотека windows.h 
*/
			int A[10] = { 0 }, B[10] = { 0 }; int c;
			while (1)
			{
				cout << "a)	ввод мелодии" << endl;
					cout << "	b)	редактирование мелодии(по номеру ноты)" << endl;
					cout << "	c)	просмотреть ноты мелодии" << endl;
					cout << "	d)	проиграть мелодию" << endl;
					cout << "	e)	выход" << endl;
					cin >> f;
					if (f == 'a')
					{
						for (int i = 0; i < 10; i++)
						{
							cout << "введите " << i << " ноты частоту" << endl;
							cin >> A[i];
							cout << "введите " << i << " ноты длительность" << endl;
							cin >> B[i];
						}
					}
					if (f == 'b')
					{
						cout << "введите номер ноты" << endl;
						cin >> c;
						cout << "задайте новую частоту и длительность" << endl;
						cin >> A[c];
						cin >> B[c];
					}
			}
		}
		cout << "Хотите продолжить, проверять задания" << endl;
		cout << "y-da  n-net" << endl;
		cin >> f;
	} while (f == 'y');
}